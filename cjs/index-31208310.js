'use strict';

const index_es = require('./index.es-34078dca.js');
const stencilaActionMenu_stencilaEditor_stencilaNodeList_entry = require('./stencila-action-menu.stencila-editor.stencila-node-list-0109cb60.js');
require('./index-c7f4beea.js');
require('./slotSelectors-20d2cae5.js');
require('./schema-3bbb20ef.js');
require('./_commonjsHelpers-1fbbf0eb.js');
require('./function-a5c185a1.js');
require('./imagePlotlyUtils-44e0c361.js');

// This file was generated by lezer-generator. You probably shouldn't edit it.
const parser = index_es.Parser.deserialize({
  version: 13,
  states: "$bOVQPOOOOQO'#Cb'#CbOnQPO'#CeOvQPO'#CjOOQO'#Cp'#CpQOQPOOOOQO'#Cg'#CgO}QPO'#CfO!SQPO'#CrOOQO,59P,59PO![QPO,59PO!aQPO'#CuOOQO,59U,59UO!iQPO,59UOVQPO,59QOqQPO'#CkO!nQPO,59^OOQO1G.k1G.kOVQPO'#ClO!vQPO,59aOOQO1G.p1G.pOOQO1G.l1G.lOOQO,59V,59VOOQO-E6i-E6iOOQO,59W,59WOOQO-E6j-E6j",
  stateData: "#O~OcOS~OQSORSOSSOTSOWQO]ROePO~OVXOeUO~O[[O~PVOg^O~Oh_OVfX~OVaO~OhbO[iX~O[dO~Oh_OVfa~OhbO[ia~O",
  goto: "!kjPPPPPPkPPkqwPPk{!RPPP!XP!ePP!hXSOR^bQWQRf_TVQ_Q`WRg`QcZRicQTOQZRQe^RhbRYQR]R",
  nodeNames: "âš  JsonText True False Null Number String } { Object Property PropertyName ] [ Array",
  maxTerm: 25,
  nodeProps: [
    [stencilaActionMenu_stencilaEditor_stencilaNodeList_entry.NodeProp.openedBy, 7,"{",12,"["],
    [stencilaActionMenu_stencilaEditor_stencilaNodeList_entry.NodeProp.closedBy, 8,"}",13,"]"]
  ],
  skippedNodes: [0],
  repeatNodeCount: 2,
  tokenData: "(p~RaXY!WYZ!W]^!Wpq!Wrs!]|}$i}!O$n!Q!R$w!R![&V![!]&h!}#O&m#P#Q&r#Y#Z&w#b#c'f#h#i'}#o#p(f#q#r(k~!]Oc~~!`Upq!]qr!]rs!rs#O!]#O#P!w#P~!]~!wOe~~!zXrs!]!P!Q!]#O#P!]#U#V!]#Y#Z!]#b#c!]#f#g!]#h#i!]#i#j#g~#jR!Q![#s!c!i#s#T#Z#s~#vR!Q![$P!c!i$P#T#Z$P~$SR!Q![$]!c!i$]#T#Z$]~$`R!Q![!]!c!i!]#T#Z!]~$nOh~~$qQ!Q!R$w!R![&V~$|RT~!O!P%V!g!h%k#X#Y%k~%YP!Q![%]~%bRT~!Q![%]!g!h%k#X#Y%k~%nR{|%w}!O%w!Q![%}~%zP!Q![%}~&SPT~!Q![%}~&[ST~!O!P%V!Q![&V!g!h%k#X#Y%k~&mOg~~&rO]~~&wO[~~&zP#T#U&}~'QP#`#a'T~'WP#g#h'Z~'^P#X#Y'a~'fOR~~'iP#i#j'l~'oP#`#a'r~'uP#`#a'x~'}OS~~(QP#f#g(T~(WP#i#j(Z~(^P#X#Y(a~(fOQ~~(kOW~~(pOV~",
  tokenizers: [0],
  topRules: {"JsonText":[0,1]},
  tokenPrec: 0
});

/// Calls
/// [`JSON.parse`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse)
/// on the document and, if that throws an error, reports it as a
/// single diagnostic.
const jsonParseLinter = () => (view) => {
    try {
        JSON.parse(view.state.doc.toString());
    }
    catch (e) {
        if (!(e instanceof SyntaxError))
            throw e;
        const pos = getErrorPosition(e, view.state.doc);
        return [{
                from: pos,
                message: e.message,
                severity: 'error',
                to: pos
            }];
    }
    return [];
};
function getErrorPosition(error, doc) {
    let m;
    if (m = error.message.match(/at position (\d+)/))
        return Math.min(+m[1], doc.length);
    if (m = error.message.match(/at line (\d+) column (\d+)/))
        return Math.min(doc.line(+m[1]).from + (+m[2]) - 1, doc.length);
    return 0;
}

/// A language provider that provides JSON parsing.
const jsonLanguage = stencilaActionMenu_stencilaEditor_stencilaNodeList_entry.LezerLanguage.define({
    parser: parser.configure({
        props: [
            stencilaActionMenu_stencilaEditor_stencilaNodeList_entry.indentNodeProp.add({
                Object: stencilaActionMenu_stencilaEditor_stencilaNodeList_entry.continuedIndent({ except: /^\s*\}/ }),
                Array: stencilaActionMenu_stencilaEditor_stencilaNodeList_entry.continuedIndent({ except: /^\s*\]/ })
            }),
            stencilaActionMenu_stencilaEditor_stencilaNodeList_entry.foldNodeProp.add({
                "Object Array": stencilaActionMenu_stencilaEditor_stencilaNodeList_entry.foldInside
            }),
            stencilaActionMenu_stencilaEditor_stencilaNodeList_entry.styleTags({
                String: stencilaActionMenu_stencilaEditor_stencilaNodeList_entry.tags.string,
                Number: stencilaActionMenu_stencilaEditor_stencilaNodeList_entry.tags.number,
                "True False": stencilaActionMenu_stencilaEditor_stencilaNodeList_entry.tags.bool,
                PropertyName: stencilaActionMenu_stencilaEditor_stencilaNodeList_entry.tags.propertyName,
                null: stencilaActionMenu_stencilaEditor_stencilaNodeList_entry.tags.null,
                ",": stencilaActionMenu_stencilaEditor_stencilaNodeList_entry.tags.separator,
                "[ ]": stencilaActionMenu_stencilaEditor_stencilaNodeList_entry.tags.squareBracket,
                "{ }": stencilaActionMenu_stencilaEditor_stencilaNodeList_entry.tags.brace
            })
        ]
    }),
    languageData: {
        closeBrackets: { brackets: ["[", "{", '"'] },
        indentOnInput: /^\s*[\}\]]$/
    }
});
/// JSON language support.
function json() {
    return new stencilaActionMenu_stencilaEditor_stencilaNodeList_entry.LanguageSupport(jsonLanguage);
}

exports.json = json;
exports.jsonLanguage = jsonLanguage;
exports.jsonParseLinter = jsonParseLinter;
